{ StatusCodeError: 500 - ""
    at new StatusCodeError (/home/justinbcameron/JS/hunkbot/node_modules/request-promise-core/lib/errors.js:32:15)
    at Request.plumbing.callback (/home/justinbcameron/JS/hunkbot/node_modules/request-promise-core/lib/plumbing.js:104:33)
    at Request.RP$callback [as _callback] (/home/justinbcameron/JS/hunkbot/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at Request.self.callback (/home/justinbcameron/JS/hunkbot/node_modules/request/request.js:185:22)
    at Request.emit (events.js:182:13)
    at Request.<anonymous> (/home/justinbcameron/JS/hunkbot/node_modules/request/request.js:1161:10)
    at Request.emit (events.js:182:13)
    at IncomingMessage.<anonymous> (/home/justinbcameron/JS/hunkbot/node_modules/request/request.js:1083:12)
    at Object.onceWrapper (events.js:273:13)
    at IncomingMessage.emit (events.js:187:15)
    at endReadableNT (_stream_readable.js:1094:12)
    at process.internalTickCallback (internal/process/next_tick.js:72:19)
  name: 'StatusCodeError',
  statusCode: 500,
  message: '500 - ""',
  error: '',
  options:
   { url: 'https://v1.peachapi.com/activity/isUnread',
     method: 'GET',
     headers: { Authorization: 'Bearer undefined' },
     callback: [Function: RP$callback],
     transform: undefined,
     simple: true,
     resolveWithFullResponse: false,
     transform2xxOnly: false },
  response:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [ [Function: responseOnEnd], [Function] ],
        close: [ [Function], [Function] ],
        data: [Function],
        error: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'v1.peachapi.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close:
            [ [Function: onSocketCloseDestroySSL],
              { [Function: bound onceWrapper] listener: [Function] },
              [Function: onClose],
              [Function: socketCloseListener] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error: [Function: socketErrorListener],
           finish:
            { [Function: bound onceWrapper] listener: [Function: destroy] } },
        _eventsCount: 8,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'v1.peachapi.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: false,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: true,
           needDrain: false,
           ending: true,
           ended: true,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 1,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage:
         ClientRequest {
           _events:
            [Object: null prototype] {
              socket: [Function],
              response: [Function: bound ],
              error: [Function: bound ],
              drain: [Function],
              prefinish: [Function: requestOnPrefinish] },
           _eventsCount: 5,
           _maxListeners: undefined,
           output: [],
           outputEncodings: [],
           outputCallbacks: [],
           outputSize: 0,
           writable: true,
           _last: true,
           chunkedEncoding: false,
           shouldKeepAlive: false,
           useChunkedEncodingByDefault: false,
           sendDate: false,
           _removedConnection: false,
           _removedContLen: false,
           _removedTE: false,
           _contentLength: 0,
           _hasBody: true,
           _trailer: '',
           finished: true,
           _headerSent: true,
           socket: [Circular],
           connection: [Circular],
           _header:
            'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
           _onPendingData: [Function: noopPendingOutput],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           socketPath: undefined,
           timeout: undefined,
           method: 'GET',
           path: '/activity/isUnread',
           _ended: true,
           res: [Circular],
           aborted: false,
           timeoutCb: null,
           upgradeOrConnect: false,
           parser: null,
           maxHeadersCount: null,
           [Symbol(isCorked)]: false,
           [Symbol(outHeadersKey)]:
            [Object: null prototype] {
              authorization: [ 'Authorization', 'Bearer undefined' ],
              host: [ 'host', 'v1.peachapi.com' ] } },
        write: [Function: writeAfterFIN],
        [Symbol(res)]:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular],
              [Symbol(handle_onclose)]: [Function: done] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: noop],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 380,
        [Symbol(kBytesWritten)]: 110,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           servername: 'v1.peachapi.com',
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _events:
            [Object: null prototype] {
              error: [Function: bound ],
              complete: [Function: bound ],
              pipe: [Function],
              data: [Function],
              end: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           method: 'GET',
           headers: { Authorization: 'Bearer undefined' },
           readable: true,
           writable: true,
           explicitMethod: true,
           _qs:
            Querystring {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs: [Circular],
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              lib:
               { formats:
                  { default: 'RFC3986',
                    formatters:
                     { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                    RFC1738: 'RFC1738',
                    RFC3986: 'RFC3986' },
                 parse: [Function],
                 stringify: [Function] },
              useQuerystring: undefined,
              parseOptions: {},
              stringifyOptions: {} },
           _auth:
            Auth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth: [Circular],
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              hasAuth: false,
              sentAuth: false,
              bearerToken: null,
              user: null,
              pass: null },
           _oauth:
            OAuth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: [Circular],
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              params: null },
           _multipart:
            Multipart {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart: [Circular],
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
              chunked: false,
              body: null },
           _redirect:
            Redirect {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect: [Circular],
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              followRedirect: true,
              followRedirects: true,
              followAllRedirects: false,
              followOriginalHttpMethod: false,
              allowRedirect: [Function],
              maxRedirects: 10,
              redirects: [],
              redirectsFollowed: 0,
              removeRefererHeader: false },
           _tunnel:
            Tunnel {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel: [Circular],
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              proxyHeaderWhiteList:
               [ 'accept',
                 'accept-charset',
                 'accept-encoding',
                 'accept-language',
                 'accept-ranges',
                 'cache-control',
                 'content-encoding',
                 'content-language',
                 'content-location',
                 'content-md5',
                 'content-range',
                 'content-type',
                 'connection',
                 'date',
                 'expect',
                 'max-forwards',
                 'pragma',
                 'referer',
                 'te',
                 'user-agent',
                 'via' ],
              proxyHeaderExclusiveList: [] },
           _rp_resolve: [Function],
           _rp_reject: [Function],
           _rp_promise:
            Promise {
              _bitField: 16777216,
              _fulfillmentHandler0: [Circular],
              _rejectionHandler0: [Function],
              _promise0: undefined,
              _receiver0: undefined,
              _onCancelField: undefined,
              _branchesRemainingToCancel: 1,
              _cancellationParent: undefined },
           _rp_callbackOrig: undefined,
           callback: [Function],
           _rp_options:
            { url: 'https://v1.peachapi.com/activity/isUnread',
              method: 'GET',
              headers: { Authorization: 'Bearer undefined' },
              callback: [Function: RP$callback],
              transform: undefined,
              simple: true,
              resolveWithFullResponse: false,
              transform2xxOnly: false },
           setHeader: [Function],
           hasHeader: [Function],
           getHeader: [Function],
           removeHeader: [Function],
           localAddress: undefined,
           pool: {},
           dests: [],
           __isRequestRequest: true,
           _callback: [Function: RP$callback],
           uri:
            Url {
              protocol: 'https:',
              slashes: true,
              auth: null,
              host: 'v1.peachapi.com',
              port: 443,
              hostname: 'v1.peachapi.com',
              hash: null,
              search: null,
              query: null,
              pathname: '/activity/isUnread',
              path: '/activity/isUnread',
              href: 'https://v1.peachapi.com/activity/isUnread' },
           proxy: null,
           tunnel: true,
           setHost: true,
           originalCookieHeader: undefined,
           _disableCookies: true,
           _jar: undefined,
           port: 443,
           host: 'v1.peachapi.com',
           path: null,
           httpModule:
            { Agent: [Function: Agent],
              globalAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request] },
           agentClass: [Function: Agent],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _started: true,
           href: 'https://v1.peachapi.com/activity/isUnread',
           _agentKey: 'v1.peachapi.com:443::::::::::::::::',
           encoding: null,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           singleUse: true } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'v1.peachapi.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close:
            [ [Function: onSocketCloseDestroySSL],
              { [Function: bound onceWrapper] listener: [Function] },
              [Function: onClose],
              [Function: socketCloseListener] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error: [Function: socketErrorListener],
           finish:
            { [Function: bound onceWrapper] listener: [Function: destroy] } },
        _eventsCount: 8,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'v1.peachapi.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: false,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: true,
           needDrain: false,
           ending: true,
           ended: true,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 1,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage:
         ClientRequest {
           _events:
            [Object: null prototype] {
              socket: [Function],
              response: [Function: bound ],
              error: [Function: bound ],
              drain: [Function],
              prefinish: [Function: requestOnPrefinish] },
           _eventsCount: 5,
           _maxListeners: undefined,
           output: [],
           outputEncodings: [],
           outputCallbacks: [],
           outputSize: 0,
           writable: true,
           _last: true,
           chunkedEncoding: false,
           shouldKeepAlive: false,
           useChunkedEncodingByDefault: false,
           sendDate: false,
           _removedConnection: false,
           _removedContLen: false,
           _removedTE: false,
           _contentLength: 0,
           _hasBody: true,
           _trailer: '',
           finished: true,
           _headerSent: true,
           socket: [Circular],
           connection: [Circular],
           _header:
            'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
           _onPendingData: [Function: noopPendingOutput],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           socketPath: undefined,
           timeout: undefined,
           method: 'GET',
           path: '/activity/isUnread',
           _ended: true,
           res: [Circular],
           aborted: false,
           timeoutCb: null,
           upgradeOrConnect: false,
           parser: null,
           maxHeadersCount: null,
           [Symbol(isCorked)]: false,
           [Symbol(outHeadersKey)]:
            [Object: null prototype] {
              authorization: [ 'Authorization', 'Bearer undefined' ],
              host: [ 'host', 'v1.peachapi.com' ] } },
        write: [Function: writeAfterFIN],
        [Symbol(res)]:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular],
              [Symbol(handle_onclose)]: [Function: done] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: noop],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 380,
        [Symbol(kBytesWritten)]: 110,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           servername: 'v1.peachapi.com',
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _events:
            [Object: null prototype] {
              error: [Function: bound ],
              complete: [Function: bound ],
              pipe: [Function],
              data: [Function],
              end: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           method: 'GET',
           headers: { Authorization: 'Bearer undefined' },
           readable: true,
           writable: true,
           explicitMethod: true,
           _qs:
            Querystring {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs: [Circular],
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              lib:
               { formats:
                  { default: 'RFC3986',
                    formatters:
                     { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                    RFC1738: 'RFC1738',
                    RFC3986: 'RFC3986' },
                 parse: [Function],
                 stringify: [Function] },
              useQuerystring: undefined,
              parseOptions: {},
              stringifyOptions: {} },
           _auth:
            Auth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth: [Circular],
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              hasAuth: false,
              sentAuth: false,
              bearerToken: null,
              user: null,
              pass: null },
           _oauth:
            OAuth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: [Circular],
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              params: null },
           _multipart:
            Multipart {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart: [Circular],
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
              chunked: false,
              body: null },
           _redirect:
            Redirect {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect: [Circular],
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              followRedirect: true,
              followRedirects: true,
              followAllRedirects: false,
              followOriginalHttpMethod: false,
              allowRedirect: [Function],
              maxRedirects: 10,
              redirects: [],
              redirectsFollowed: 0,
              removeRefererHeader: false },
           _tunnel:
            Tunnel {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel: [Circular],
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              proxyHeaderWhiteList:
               [ 'accept',
                 'accept-charset',
                 'accept-encoding',
                 'accept-language',
                 'accept-ranges',
                 'cache-control',
                 'content-encoding',
                 'content-language',
                 'content-location',
                 'content-md5',
                 'content-range',
                 'content-type',
                 'connection',
                 'date',
                 'expect',
                 'max-forwards',
                 'pragma',
                 'referer',
                 'te',
                 'user-agent',
                 'via' ],
              proxyHeaderExclusiveList: [] },
           _rp_resolve: [Function],
           _rp_reject: [Function],
           _rp_promise:
            Promise {
              _bitField: 16777216,
              _fulfillmentHandler0: [Circular],
              _rejectionHandler0: [Function],
              _promise0: undefined,
              _receiver0: undefined,
              _onCancelField: undefined,
              _branchesRemainingToCancel: 1,
              _cancellationParent: undefined },
           _rp_callbackOrig: undefined,
           callback: [Function],
           _rp_options:
            { url: 'https://v1.peachapi.com/activity/isUnread',
              method: 'GET',
              headers: { Authorization: 'Bearer undefined' },
              callback: [Function: RP$callback],
              transform: undefined,
              simple: true,
              resolveWithFullResponse: false,
              transform2xxOnly: false },
           setHeader: [Function],
           hasHeader: [Function],
           getHeader: [Function],
           removeHeader: [Function],
           localAddress: undefined,
           pool: {},
           dests: [],
           __isRequestRequest: true,
           _callback: [Function: RP$callback],
           uri:
            Url {
              protocol: 'https:',
              slashes: true,
              auth: null,
              host: 'v1.peachapi.com',
              port: 443,
              hostname: 'v1.peachapi.com',
              hash: null,
              search: null,
              query: null,
              pathname: '/activity/isUnread',
              path: '/activity/isUnread',
              href: 'https://v1.peachapi.com/activity/isUnread' },
           proxy: null,
           tunnel: true,
           setHost: true,
           originalCookieHeader: undefined,
           _disableCookies: true,
           _jar: undefined,
           port: 443,
           host: 'v1.peachapi.com',
           path: null,
           httpModule:
            { Agent: [Function: Agent],
              globalAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request] },
           agentClass: [Function: Agent],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _started: true,
           href: 'https://v1.peachapi.com/activity/isUnread',
           _agentKey: 'v1.peachapi.com:443::::::::::::::::',
           encoding: null,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           singleUse: true } },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'cache-control': 'no-cache="set-cookie"',
        'content-type': 'text/plain; charset=utf-8',
        date: 'Sat, 17 Nov 2018 02:18:17 GMT',
        server: 'nginx/1.12.1',
        'set-cookie':
         [ 'AWSELB=CB5D1FBB08457FD29E642B975FCD72050995BE8DFDBBC3E6C40C175F635E76DDC5F1D53B5B8ABD81DD6022F9D22EBE0CB1216A1844EFE85CE4BEE9B49B5F4E78AFB10F58F4;PATH=/' ],
        'content-length': '0',
        connection: 'Close' },
     rawHeaders:
      [ 'Cache-control',
        'no-cache="set-cookie"',
        'Content-Type',
        'text/plain; charset=utf-8',
        'Date',
        'Sat, 17 Nov 2018 02:18:17 GMT',
        'Server',
        'nginx/1.12.1',
        'Set-Cookie',
        'AWSELB=CB5D1FBB08457FD29E642B975FCD72050995BE8DFDBBC3E6C40C175F635E76DDC5F1D53B5B8ABD81DD6022F9D22EBE0CB1216A1844EFE85CE4BEE9B49B5F4E78AFB10F58F4;PATH=/',
        'Content-Length',
        '0',
        'Connection',
        'Close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 500,
     statusMessage: 'Internal Server Error',
     client:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'v1.peachapi.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close:
            [ [Function: onSocketCloseDestroySSL],
              { [Function: bound onceWrapper] listener: [Function] },
              [Function: onClose],
              [Function: socketCloseListener] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error: [Function: socketErrorListener],
           finish:
            { [Function: bound onceWrapper] listener: [Function: destroy] } },
        _eventsCount: 8,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'v1.peachapi.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: false,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: false,
           destroyed: true,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: false,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: true,
           needDrain: false,
           ending: true,
           ended: true,
           finished: false,
           destroyed: true,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 1,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage:
         ClientRequest {
           _events:
            [Object: null prototype] {
              socket: [Function],
              response: [Function: bound ],
              error: [Function: bound ],
              drain: [Function],
              prefinish: [Function: requestOnPrefinish] },
           _eventsCount: 5,
           _maxListeners: undefined,
           output: [],
           outputEncodings: [],
           outputCallbacks: [],
           outputSize: 0,
           writable: true,
           _last: true,
           chunkedEncoding: false,
           shouldKeepAlive: false,
           useChunkedEncodingByDefault: false,
           sendDate: false,
           _removedConnection: false,
           _removedContLen: false,
           _removedTE: false,
           _contentLength: 0,
           _hasBody: true,
           _trailer: '',
           finished: true,
           _headerSent: true,
           socket: [Circular],
           connection: [Circular],
           _header:
            'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
           _onPendingData: [Function: noopPendingOutput],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           socketPath: undefined,
           timeout: undefined,
           method: 'GET',
           path: '/activity/isUnread',
           _ended: true,
           res: [Circular],
           aborted: false,
           timeoutCb: null,
           upgradeOrConnect: false,
           parser: null,
           maxHeadersCount: null,
           [Symbol(isCorked)]: false,
           [Symbol(outHeadersKey)]:
            [Object: null prototype] {
              authorization: [ 'Authorization', 'Bearer undefined' ],
              host: [ 'host', 'v1.peachapi.com' ] } },
        write: [Function: writeAfterFIN],
        [Symbol(res)]:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular],
              [Symbol(handle_onclose)]: [Function: done] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: noop],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 380,
        [Symbol(kBytesWritten)]: 110,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           servername: 'v1.peachapi.com',
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _events:
            [Object: null prototype] {
              error: [Function: bound ],
              complete: [Function: bound ],
              pipe: [Function],
              data: [Function],
              end: [Function] },
           _eventsCount: 3,
           _maxListeners: undefined,
           method: 'GET',
           headers: { Authorization: 'Bearer undefined' },
           readable: true,
           writable: true,
           explicitMethod: true,
           _qs:
            Querystring {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs: [Circular],
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              lib:
               { formats:
                  { default: 'RFC3986',
                    formatters:
                     { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                    RFC1738: 'RFC1738',
                    RFC3986: 'RFC3986' },
                 parse: [Function],
                 stringify: [Function] },
              useQuerystring: undefined,
              parseOptions: {},
              stringifyOptions: {} },
           _auth:
            Auth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth: [Circular],
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              hasAuth: false,
              sentAuth: false,
              bearerToken: null,
              user: null,
              pass: null },
           _oauth:
            OAuth {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: [Circular],
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              params: null },
           _multipart:
            Multipart {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart: [Circular],
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
              chunked: false,
              body: null },
           _redirect:
            Redirect {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect: [Circular],
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              followRedirect: true,
              followRedirects: true,
              followAllRedirects: false,
              followOriginalHttpMethod: false,
              allowRedirect: [Function],
              maxRedirects: 10,
              redirects: [],
              redirectsFollowed: 0,
              removeRefererHeader: false },
           _tunnel:
            Tunnel {
              request:
               Request {
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 5,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel: [Circular],
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: '/activity/isUnread',
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 req:
                  ClientRequest {
                    _events:
                     [Object: null prototype] {
                       socket: [Function],
                       response: [Function: bound ],
                       error: [Function: bound ],
                       drain: [Function],
                       prefinish: [Function: requestOnPrefinish] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: false,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    _contentLength: 0,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Circular],
                    connection: [Circular],
                    _header:
                     'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                    _onPendingData: [Function: noopPendingOutput],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    socketPath: undefined,
                    timeout: undefined,
                    method: 'GET',
                    path: '/activity/isUnread',
                    _ended: true,
                    res: [Circular],
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: null,
                    maxHeadersCount: null,
                    [Symbol(isCorked)]: false,
                    [Symbol(outHeadersKey)]:
                     [Object: null prototype] {
                       authorization: [ 'Authorization', 'Bearer undefined' ],
                       host: [ 'host', 'v1.peachapi.com' ] } },
                 ntick: true,
                 response: [Circular],
                 originalHost: 'v1.peachapi.com',
                 originalHostHeaderName: 'host',
                 responseContent: [Circular],
                 _ended: true,
                 _callbackCalled: true },
              proxyHeaderWhiteList:
               [ 'accept',
                 'accept-charset',
                 'accept-encoding',
                 'accept-language',
                 'accept-ranges',
                 'cache-control',
                 'content-encoding',
                 'content-language',
                 'content-location',
                 'content-md5',
                 'content-range',
                 'content-type',
                 'connection',
                 'date',
                 'expect',
                 'max-forwards',
                 'pragma',
                 'referer',
                 'te',
                 'user-agent',
                 'via' ],
              proxyHeaderExclusiveList: [] },
           _rp_resolve: [Function],
           _rp_reject: [Function],
           _rp_promise:
            Promise {
              _bitField: 16777216,
              _fulfillmentHandler0: [Circular],
              _rejectionHandler0: [Function],
              _promise0: undefined,
              _receiver0: undefined,
              _onCancelField: undefined,
              _branchesRemainingToCancel: 1,
              _cancellationParent: undefined },
           _rp_callbackOrig: undefined,
           callback: [Function],
           _rp_options:
            { url: 'https://v1.peachapi.com/activity/isUnread',
              method: 'GET',
              headers: { Authorization: 'Bearer undefined' },
              callback: [Function: RP$callback],
              transform: undefined,
              simple: true,
              resolveWithFullResponse: false,
              transform2xxOnly: false },
           setHeader: [Function],
           hasHeader: [Function],
           getHeader: [Function],
           removeHeader: [Function],
           localAddress: undefined,
           pool: {},
           dests: [],
           __isRequestRequest: true,
           _callback: [Function: RP$callback],
           uri:
            Url {
              protocol: 'https:',
              slashes: true,
              auth: null,
              host: 'v1.peachapi.com',
              port: 443,
              hostname: 'v1.peachapi.com',
              hash: null,
              search: null,
              query: null,
              pathname: '/activity/isUnread',
              path: '/activity/isUnread',
              href: 'https://v1.peachapi.com/activity/isUnread' },
           proxy: null,
           tunnel: true,
           setHost: true,
           originalCookieHeader: undefined,
           _disableCookies: true,
           _jar: undefined,
           port: 443,
           host: 'v1.peachapi.com',
           path: null,
           httpModule:
            { Agent: [Function: Agent],
              globalAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request] },
           agentClass: [Function: Agent],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           _started: true,
           href: 'https://v1.peachapi.com/activity/isUnread',
           _agentKey: 'v1.peachapi.com:443::::::::::::::::',
           encoding: null,
           session:
            <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
           singleUse: true } },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events:
         [Object: null prototype] {
           socket: [Function],
           response: [Function: bound ],
           error: [Function: bound ],
           drain: [Function],
           prefinish: [Function: requestOnPrefinish] },
        _eventsCount: 5,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session:
               <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'v1.peachapi.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close:
               [ [Function: onSocketCloseDestroySSL],
                 { [Function: bound onceWrapper] listener: [Function] },
                 [Function: onClose],
                 [Function: socketCloseListener] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error: [Function: socketErrorListener],
              finish:
               { [Function: bound onceWrapper] listener: [Function: destroy] } },
           _eventsCount: 8,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'v1.peachapi.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: true,
              endEmitted: true,
              reading: false,
              sync: false,
              needReadable: false,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: true,
              needDrain: false,
              ending: true,
              ended: true,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 1,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           write: [Function: writeAfterFIN],
           [Symbol(res)]:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular],
                 [Symbol(handle_onclose)]: [Function: done] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: noop],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           [Symbol(asyncId)]: 31,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 380,
           [Symbol(kBytesWritten)]: 110,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              servername: 'v1.peachapi.com',
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              _events:
               [Object: null prototype] {
                 error: [Function: bound ],
                 complete: [Function: bound ],
                 pipe: [Function],
                 data: [Function],
                 end: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              method: 'GET',
              headers: { Authorization: 'Bearer undefined' },
              readable: true,
              writable: true,
              explicitMethod: true,
              _qs:
               Querystring {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs: [Circular],
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 lib:
                  { formats:
                     { default: 'RFC3986',
                       formatters:
                        { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                       RFC1738: 'RFC1738',
                       RFC3986: 'RFC3986' },
                    parse: [Function],
                    stringify: [Function] },
                 useQuerystring: undefined,
                 parseOptions: {},
                 stringifyOptions: {} },
              _auth:
               Auth {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth: [Circular],
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 hasAuth: false,
                 sentAuth: false,
                 bearerToken: null,
                 user: null,
                 pass: null },
              _oauth:
               OAuth {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: [Circular],
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 params: null },
              _multipart:
               Multipart {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart: [Circular],
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                 chunked: false,
                 body: null },
              _redirect:
               Redirect {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect: [Circular],
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 followRedirect: true,
                 followRedirects: true,
                 followAllRedirects: false,
                 followOriginalHttpMethod: false,
                 allowRedirect: [Function],
                 maxRedirects: 10,
                 redirects: [],
                 redirectsFollowed: 0,
                 removeRefererHeader: false },
              _tunnel:
               Tunnel {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel: [Circular],
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 proxyHeaderWhiteList:
                  [ 'accept',
                    'accept-charset',
                    'accept-encoding',
                    'accept-language',
                    'accept-ranges',
                    'cache-control',
                    'content-encoding',
                    'content-language',
                    'content-location',
                    'content-md5',
                    'content-range',
                    'content-type',
                    'connection',
                    'date',
                    'expect',
                    'max-forwards',
                    'pragma',
                    'referer',
                    'te',
                    'user-agent',
                    'via' ],
                 proxyHeaderExclusiveList: [] },
              _rp_resolve: [Function],
              _rp_reject: [Function],
              _rp_promise:
               Promise {
                 _bitField: 16777216,
                 _fulfillmentHandler0: [Circular],
                 _rejectionHandler0: [Function],
                 _promise0: undefined,
                 _receiver0: undefined,
                 _onCancelField: undefined,
                 _branchesRemainingToCancel: 1,
                 _cancellationParent: undefined },
              _rp_callbackOrig: undefined,
              callback: [Function],
              _rp_options:
               { url: 'https://v1.peachapi.com/activity/isUnread',
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 callback: [Function: RP$callback],
                 transform: undefined,
                 simple: true,
                 resolveWithFullResponse: false,
                 transform2xxOnly: false },
              setHeader: [Function],
              hasHeader: [Function],
              getHeader: [Function],
              removeHeader: [Function],
              localAddress: undefined,
              pool: {},
              dests: [],
              __isRequestRequest: true,
              _callback: [Function: RP$callback],
              uri:
               Url {
                 protocol: 'https:',
                 slashes: true,
                 auth: null,
                 host: 'v1.peachapi.com',
                 port: 443,
                 hostname: 'v1.peachapi.com',
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/activity/isUnread',
                 path: '/activity/isUnread',
                 href: 'https://v1.peachapi.com/activity/isUnread' },
              proxy: null,
              tunnel: true,
              setHost: true,
              originalCookieHeader: undefined,
              _disableCookies: true,
              _jar: undefined,
              port: 443,
              host: 'v1.peachapi.com',
              path: null,
              httpModule:
               { Agent: [Function: Agent],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 Server: [Function: Server],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] },
              agentClass: [Function: Agent],
              agent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              _started: true,
              href: 'https://v1.peachapi.com/activity/isUnread',
              _agentKey: 'v1.peachapi.com:443::::::::::::::::',
              encoding: null,
              session:
               <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
              singleUse: true } },
        connection:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session:
               <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: 'v1.peachapi.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close:
               [ [Function: onSocketCloseDestroySSL],
                 { [Function: bound onceWrapper] listener: [Function] },
                 [Function: onClose],
                 [Function: socketCloseListener] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error: [Function: socketErrorListener],
              finish:
               { [Function: bound onceWrapper] listener: [Function: destroy] } },
           _eventsCount: 8,
           connecting: false,
           _hadError: false,
           _handle: null,
           _parent: null,
           _host: 'v1.peachapi.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: true,
              endEmitted: true,
              reading: false,
              sync: false,
              needReadable: false,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              emitClose: false,
              destroyed: true,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: false,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: true,
              needDrain: false,
              ending: true,
              ended: true,
              finished: false,
              destroyed: true,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 1,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl: null,
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           write: [Function: writeAfterFIN],
           [Symbol(res)]:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular],
                 [Symbol(handle_onclose)]: [Function: done] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: noop],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           [Symbol(asyncId)]: 31,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 380,
           [Symbol(kBytesWritten)]: 110,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              servername: 'v1.peachapi.com',
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              _events:
               [Object: null prototype] {
                 error: [Function: bound ],
                 complete: [Function: bound ],
                 pipe: [Function],
                 data: [Function],
                 end: [Function] },
              _eventsCount: 3,
              _maxListeners: undefined,
              method: 'GET',
              headers: { Authorization: 'Bearer undefined' },
              readable: true,
              writable: true,
              explicitMethod: true,
              _qs:
               Querystring {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs: [Circular],
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 lib:
                  { formats:
                     { default: 'RFC3986',
                       formatters:
                        { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                       RFC1738: 'RFC1738',
                       RFC3986: 'RFC3986' },
                    parse: [Function],
                    stringify: [Function] },
                 useQuerystring: undefined,
                 parseOptions: {},
                 stringifyOptions: {} },
              _auth:
               Auth {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth: [Circular],
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 hasAuth: false,
                 sentAuth: false,
                 bearerToken: null,
                 user: null,
                 pass: null },
              _oauth:
               OAuth {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: [Circular],
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 params: null },
              _multipart:
               Multipart {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart: [Circular],
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                 chunked: false,
                 body: null },
              _redirect:
               Redirect {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect: [Circular],
                    _tunnel:
                     Tunnel {
                       request: [Circular],
                       proxyHeaderWhiteList:
                        [ 'accept',
                          'accept-charset',
                          'accept-encoding',
                          'accept-language',
                          'accept-ranges',
                          'cache-control',
                          'content-encoding',
                          'content-language',
                          'content-location',
                          'content-md5',
                          'content-range',
                          'content-type',
                          'connection',
                          'date',
                          'expect',
                          'max-forwards',
                          'pragma',
                          'referer',
                          'te',
                          'user-agent',
                          'via' ],
                       proxyHeaderExclusiveList: [] },
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 followRedirect: true,
                 followRedirects: true,
                 followAllRedirects: false,
                 followOriginalHttpMethod: false,
                 allowRedirect: [Function],
                 maxRedirects: 10,
                 redirects: [],
                 redirectsFollowed: 0,
                 removeRefererHeader: false },
              _tunnel:
               Tunnel {
                 request:
                  Request {
                    _events:
                     [Object: null prototype] {
                       error: [Function: bound ],
                       complete: [Function: bound ],
                       pipe: [Function],
                       data: [Function],
                       end: [Function] },
                    _eventsCount: 5,
                    _maxListeners: undefined,
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    readable: true,
                    writable: true,
                    explicitMethod: true,
                    _qs:
                     Querystring {
                       request: [Circular],
                       lib:
                        { formats:
                           { default: 'RFC3986',
                             formatters:
                              { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                             RFC1738: 'RFC1738',
                             RFC3986: 'RFC3986' },
                          parse: [Function],
                          stringify: [Function] },
                       useQuerystring: undefined,
                       parseOptions: {},
                       stringifyOptions: {} },
                    _auth:
                     Auth {
                       request: [Circular],
                       hasAuth: false,
                       sentAuth: false,
                       bearerToken: null,
                       user: null,
                       pass: null },
                    _oauth: OAuth { request: [Circular], params: null },
                    _multipart:
                     Multipart {
                       request: [Circular],
                       boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                       chunked: false,
                       body: null },
                    _redirect:
                     Redirect {
                       request: [Circular],
                       followRedirect: true,
                       followRedirects: true,
                       followAllRedirects: false,
                       followOriginalHttpMethod: false,
                       allowRedirect: [Function],
                       maxRedirects: 10,
                       redirects: [],
                       redirectsFollowed: 0,
                       removeRefererHeader: false },
                    _tunnel: [Circular],
                    _rp_resolve: [Function],
                    _rp_reject: [Function],
                    _rp_promise:
                     Promise {
                       _bitField: 16777216,
                       _fulfillmentHandler0: [Circular],
                       _rejectionHandler0: [Function],
                       _promise0: undefined,
                       _receiver0: undefined,
                       _onCancelField: undefined,
                       _branchesRemainingToCancel: 1,
                       _cancellationParent: undefined },
                    _rp_callbackOrig: undefined,
                    callback: [Function],
                    _rp_options:
                     { url: 'https://v1.peachapi.com/activity/isUnread',
                       method: 'GET',
                       headers: { Authorization: 'Bearer undefined' },
                       callback: [Function: RP$callback],
                       transform: undefined,
                       simple: true,
                       resolveWithFullResponse: false,
                       transform2xxOnly: false },
                    setHeader: [Function],
                    hasHeader: [Function],
                    getHeader: [Function],
                    removeHeader: [Function],
                    localAddress: undefined,
                    pool: {},
                    dests: [],
                    __isRequestRequest: true,
                    _callback: [Function: RP$callback],
                    uri:
                     Url {
                       protocol: 'https:',
                       slashes: true,
                       auth: null,
                       host: 'v1.peachapi.com',
                       port: 443,
                       hostname: 'v1.peachapi.com',
                       hash: null,
                       search: null,
                       query: null,
                       pathname: '/activity/isUnread',
                       path: '/activity/isUnread',
                       href: 'https://v1.peachapi.com/activity/isUnread' },
                    proxy: null,
                    tunnel: true,
                    setHost: true,
                    originalCookieHeader: undefined,
                    _disableCookies: true,
                    _jar: undefined,
                    port: 443,
                    host: 'v1.peachapi.com',
                    path: '/activity/isUnread',
                    httpModule:
                     { Agent: [Function: Agent],
                       globalAgent:
                        Agent {
                          _events: [Object: null prototype] { free: [Function] },
                          _eventsCount: 1,
                          _maxListeners: undefined,
                          defaultPort: 443,
                          protocol: 'https:',
                          options: { path: null },
                          requests: {},
                          sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                          freeSockets: {},
                          keepAliveMsecs: 1000,
                          keepAlive: false,
                          maxSockets: Infinity,
                          maxFreeSockets: 256,
                          maxCachedSessions: 100,
                          _sessionCache:
                           { map:
                              { 'v1.peachapi.com:443::::::::::::::::':
                                 <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                             list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                       Server: [Function: Server],
                       createServer: [Function: createServer],
                       get: [Function: get],
                       request: [Function: request] },
                    agentClass: [Function: Agent],
                    agent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    _started: true,
                    href: 'https://v1.peachapi.com/activity/isUnread',
                    req: [Circular],
                    ntick: true,
                    response: [Circular],
                    originalHost: 'v1.peachapi.com',
                    originalHostHeaderName: 'host',
                    responseContent: [Circular],
                    _ended: true,
                    _callbackCalled: true },
                 proxyHeaderWhiteList:
                  [ 'accept',
                    'accept-charset',
                    'accept-encoding',
                    'accept-language',
                    'accept-ranges',
                    'cache-control',
                    'content-encoding',
                    'content-language',
                    'content-location',
                    'content-md5',
                    'content-range',
                    'content-type',
                    'connection',
                    'date',
                    'expect',
                    'max-forwards',
                    'pragma',
                    'referer',
                    'te',
                    'user-agent',
                    'via' ],
                 proxyHeaderExclusiveList: [] },
              _rp_resolve: [Function],
              _rp_reject: [Function],
              _rp_promise:
               Promise {
                 _bitField: 16777216,
                 _fulfillmentHandler0: [Circular],
                 _rejectionHandler0: [Function],
                 _promise0: undefined,
                 _receiver0: undefined,
                 _onCancelField: undefined,
                 _branchesRemainingToCancel: 1,
                 _cancellationParent: undefined },
              _rp_callbackOrig: undefined,
              callback: [Function],
              _rp_options:
               { url: 'https://v1.peachapi.com/activity/isUnread',
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 callback: [Function: RP$callback],
                 transform: undefined,
                 simple: true,
                 resolveWithFullResponse: false,
                 transform2xxOnly: false },
              setHeader: [Function],
              hasHeader: [Function],
              getHeader: [Function],
              removeHeader: [Function],
              localAddress: undefined,
              pool: {},
              dests: [],
              __isRequestRequest: true,
              _callback: [Function: RP$callback],
              uri:
               Url {
                 protocol: 'https:',
                 slashes: true,
                 auth: null,
                 host: 'v1.peachapi.com',
                 port: 443,
                 hostname: 'v1.peachapi.com',
                 hash: null,
                 search: null,
                 query: null,
                 pathname: '/activity/isUnread',
                 path: '/activity/isUnread',
                 href: 'https://v1.peachapi.com/activity/isUnread' },
              proxy: null,
              tunnel: true,
              setHost: true,
              originalCookieHeader: undefined,
              _disableCookies: true,
              _jar: undefined,
              port: 443,
              host: 'v1.peachapi.com',
              path: null,
              httpModule:
               { Agent: [Function: Agent],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 Server: [Function: Server],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] },
              agentClass: [Function: Agent],
              agent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { 'v1.peachapi.com:443::::::::::::::::':
                        <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                    list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
              _started: true,
              href: 'https://v1.peachapi.com/activity/isUnread',
              _agentKey: 'v1.peachapi.com:443::::::::::::::::',
              encoding: null,
              session:
               <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
              singleUse: true } },
        _header:
         'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent:
         Agent {
           _events: [Object: null prototype] { free: [Function] },
           _eventsCount: 1,
           _maxListeners: undefined,
           defaultPort: 443,
           protocol: 'https:',
           options: { path: null },
           requests: {},
           sockets:
            { 'v1.peachapi.com:443::::::::::::::::':
               [ TLSSocket {
                   _tlsOptions:
                    { pipe: false,
                      secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session:
                       <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined },
                   _secureEstablished: true,
                   _securePending: false,
                   _newSessionPending: false,
                   _controlReleased: true,
                   _SNICallback: null,
                   servername: 'v1.peachapi.com',
                   alpnProtocol: false,
                   authorized: true,
                   authorizationError: null,
                   encrypted: true,
                   _events:
                    [Object: null prototype] {
                      close:
                       [ [Function: onSocketCloseDestroySSL],
                         { [Function: bound onceWrapper] listener: [Function] },
                         [Function: onClose],
                         [Function: socketCloseListener] ],
                      end: [Function: onReadableStreamEnd],
                      secure: [Function: onConnectSecure],
                      free: [Function: onFree],
                      agentRemove: [Function: onRemove],
                      drain: [Function: ondrain],
                      error: [Function: socketErrorListener],
                      finish:
                       { [Function: bound onceWrapper] listener: [Function: destroy] } },
                   _eventsCount: 8,
                   connecting: false,
                   _hadError: false,
                   _handle: null,
                   _parent: null,
                   _host: 'v1.peachapi.com',
                   _readableState:
                    ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: null,
                      pipesCount: 0,
                      flowing: true,
                      ended: true,
                      endEmitted: true,
                      reading: false,
                      sync: false,
                      needReadable: false,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      emitClose: false,
                      destroyed: true,
                      defaultEncoding: 'utf8',
                      awaitDrain: 0,
                      readingMore: false,
                      decoder: null,
                      encoding: null },
                   readable: false,
                   _maxListeners: undefined,
                   _writableState:
                    WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: true,
                      needDrain: false,
                      ending: true,
                      ended: true,
                      finished: false,
                      destroyed: true,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 0,
                      writing: false,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: null,
                      writelen: 0,
                      bufferedRequest: null,
                      lastBufferedRequest: null,
                      pendingcb: 1,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      bufferedRequestCount: 0,
                      corkedRequestsFree:
                       { next: null,
                         entry: null,
                         finish: [Function: bound onCorkedFinish] } },
                   writable: false,
                   allowHalfOpen: false,
                   _sockname: null,
                   _pendingData: null,
                   _pendingEncoding: '',
                   server: undefined,
                   _server: null,
                   ssl: null,
                   _requestCert: true,
                   _rejectUnauthorized: true,
                   parser: null,
                   _httpMessage: [Circular],
                   write: [Function: writeAfterFIN],
                   [Symbol(res)]:
                    TLSWrap {
                      _parent:
                       TCP {
                         reading: [Getter/Setter],
                         onread: null,
                         onconnection: null,
                         [Symbol(owner)]: [Circular],
                         [Symbol(handle_onclose)]: [Function: done] },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                      reading: true,
                      onread: [Function: noop],
                      onhandshakestart: [Function: noop],
                      onhandshakedone: [Function: bound ],
                      onocspresponse: [Function: onocspresponse],
                      onerror: [Function: onerror],
                      [Symbol(owner)]: [Circular] },
                   [Symbol(asyncId)]: 31,
                   [Symbol(lastWriteQueueSize)]: 0,
                   [Symbol(timeout)]: null,
                   [Symbol(kBytesRead)]: 380,
                   [Symbol(kBytesWritten)]: 110,
                   [Symbol(connect-options)]:
                    { rejectUnauthorized: true,
                      ciphers:
                       'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      servername: 'v1.peachapi.com',
                      _defaultAgent: [Circular],
                      _events:
                       [Object: null prototype] {
                         error: [Function: bound ],
                         complete: [Function: bound ],
                         pipe: [Function],
                         data: [Function],
                         end: [Function] },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      method: 'GET',
                      headers: { Authorization: 'Bearer undefined' },
                      readable: true,
                      writable: true,
                      explicitMethod: true,
                      _qs:
                       Querystring {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs: [Circular],
                            _auth:
                             Auth {
                               request: [Circular],
                               hasAuth: false,
                               sentAuth: false,
                               bearerToken: null,
                               user: null,
                               pass: null },
                            _oauth: OAuth { request: [Circular], params: null },
                            _multipart:
                             Multipart {
                               request: [Circular],
                               boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                               chunked: false,
                               body: null },
                            _redirect:
                             Redirect {
                               request: [Circular],
                               followRedirect: true,
                               followRedirects: true,
                               followAllRedirects: false,
                               followOriginalHttpMethod: false,
                               allowRedirect: [Function],
                               maxRedirects: 10,
                               redirects: [],
                               redirectsFollowed: 0,
                               removeRefererHeader: false },
                            _tunnel:
                             Tunnel {
                               request: [Circular],
                               proxyHeaderWhiteList:
                                [ 'accept',
                                  'accept-charset',
                                  'accept-encoding',
                                  'accept-language',
                                  'accept-ranges',
                                  'cache-control',
                                  'content-encoding',
                                  'content-language',
                                  'content-location',
                                  'content-md5',
                                  'content-range',
                                  'content-type',
                                  'connection',
                                  'date',
                                  'expect',
                                  'max-forwards',
                                  'pragma',
                                  'referer',
                                  'te',
                                  'user-agent',
                                  'via' ],
                               proxyHeaderExclusiveList: [] },
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         lib:
                          { formats:
                             { default: 'RFC3986',
                               formatters:
                                { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                               RFC1738: 'RFC1738',
                               RFC3986: 'RFC3986' },
                            parse: [Function],
                            stringify: [Function] },
                         useQuerystring: undefined,
                         parseOptions: {},
                         stringifyOptions: {} },
                      _auth:
                       Auth {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs:
                             Querystring {
                               request: [Circular],
                               lib:
                                { formats:
                                   { default: 'RFC3986',
                                     formatters:
                                      { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                     RFC1738: 'RFC1738',
                                     RFC3986: 'RFC3986' },
                                  parse: [Function],
                                  stringify: [Function] },
                               useQuerystring: undefined,
                               parseOptions: {},
                               stringifyOptions: {} },
                            _auth: [Circular],
                            _oauth: OAuth { request: [Circular], params: null },
                            _multipart:
                             Multipart {
                               request: [Circular],
                               boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                               chunked: false,
                               body: null },
                            _redirect:
                             Redirect {
                               request: [Circular],
                               followRedirect: true,
                               followRedirects: true,
                               followAllRedirects: false,
                               followOriginalHttpMethod: false,
                               allowRedirect: [Function],
                               maxRedirects: 10,
                               redirects: [],
                               redirectsFollowed: 0,
                               removeRefererHeader: false },
                            _tunnel:
                             Tunnel {
                               request: [Circular],
                               proxyHeaderWhiteList:
                                [ 'accept',
                                  'accept-charset',
                                  'accept-encoding',
                                  'accept-language',
                                  'accept-ranges',
                                  'cache-control',
                                  'content-encoding',
                                  'content-language',
                                  'content-location',
                                  'content-md5',
                                  'content-range',
                                  'content-type',
                                  'connection',
                                  'date',
                                  'expect',
                                  'max-forwards',
                                  'pragma',
                                  'referer',
                                  'te',
                                  'user-agent',
                                  'via' ],
                               proxyHeaderExclusiveList: [] },
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         hasAuth: false,
                         sentAuth: false,
                         bearerToken: null,
                         user: null,
                         pass: null },
                      _oauth:
                       OAuth {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs:
                             Querystring {
                               request: [Circular],
                               lib:
                                { formats:
                                   { default: 'RFC3986',
                                     formatters:
                                      { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                     RFC1738: 'RFC1738',
                                     RFC3986: 'RFC3986' },
                                  parse: [Function],
                                  stringify: [Function] },
                               useQuerystring: undefined,
                               parseOptions: {},
                               stringifyOptions: {} },
                            _auth:
                             Auth {
                               request: [Circular],
                               hasAuth: false,
                               sentAuth: false,
                               bearerToken: null,
                               user: null,
                               pass: null },
                            _oauth: [Circular],
                            _multipart:
                             Multipart {
                               request: [Circular],
                               boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                               chunked: false,
                               body: null },
                            _redirect:
                             Redirect {
                               request: [Circular],
                               followRedirect: true,
                               followRedirects: true,
                               followAllRedirects: false,
                               followOriginalHttpMethod: false,
                               allowRedirect: [Function],
                               maxRedirects: 10,
                               redirects: [],
                               redirectsFollowed: 0,
                               removeRefererHeader: false },
                            _tunnel:
                             Tunnel {
                               request: [Circular],
                               proxyHeaderWhiteList:
                                [ 'accept',
                                  'accept-charset',
                                  'accept-encoding',
                                  'accept-language',
                                  'accept-ranges',
                                  'cache-control',
                                  'content-encoding',
                                  'content-language',
                                  'content-location',
                                  'content-md5',
                                  'content-range',
                                  'content-type',
                                  'connection',
                                  'date',
                                  'expect',
                                  'max-forwards',
                                  'pragma',
                                  'referer',
                                  'te',
                                  'user-agent',
                                  'via' ],
                               proxyHeaderExclusiveList: [] },
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         params: null },
                      _multipart:
                       Multipart {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs:
                             Querystring {
                               request: [Circular],
                               lib:
                                { formats:
                                   { default: 'RFC3986',
                                     formatters:
                                      { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                     RFC1738: 'RFC1738',
                                     RFC3986: 'RFC3986' },
                                  parse: [Function],
                                  stringify: [Function] },
                               useQuerystring: undefined,
                               parseOptions: {},
                               stringifyOptions: {} },
                            _auth:
                             Auth {
                               request: [Circular],
                               hasAuth: false,
                               sentAuth: false,
                               bearerToken: null,
                               user: null,
                               pass: null },
                            _oauth: OAuth { request: [Circular], params: null },
                            _multipart: [Circular],
                            _redirect:
                             Redirect {
                               request: [Circular],
                               followRedirect: true,
                               followRedirects: true,
                               followAllRedirects: false,
                               followOriginalHttpMethod: false,
                               allowRedirect: [Function],
                               maxRedirects: 10,
                               redirects: [],
                               redirectsFollowed: 0,
                               removeRefererHeader: false },
                            _tunnel:
                             Tunnel {
                               request: [Circular],
                               proxyHeaderWhiteList:
                                [ 'accept',
                                  'accept-charset',
                                  'accept-encoding',
                                  'accept-language',
                                  'accept-ranges',
                                  'cache-control',
                                  'content-encoding',
                                  'content-language',
                                  'content-location',
                                  'content-md5',
                                  'content-range',
                                  'content-type',
                                  'connection',
                                  'date',
                                  'expect',
                                  'max-forwards',
                                  'pragma',
                                  'referer',
                                  'te',
                                  'user-agent',
                                  'via' ],
                               proxyHeaderExclusiveList: [] },
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                         chunked: false,
                         body: null },
                      _redirect:
                       Redirect {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs:
                             Querystring {
                               request: [Circular],
                               lib:
                                { formats:
                                   { default: 'RFC3986',
                                     formatters:
                                      { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                     RFC1738: 'RFC1738',
                                     RFC3986: 'RFC3986' },
                                  parse: [Function],
                                  stringify: [Function] },
                               useQuerystring: undefined,
                               parseOptions: {},
                               stringifyOptions: {} },
                            _auth:
                             Auth {
                               request: [Circular],
                               hasAuth: false,
                               sentAuth: false,
                               bearerToken: null,
                               user: null,
                               pass: null },
                            _oauth: OAuth { request: [Circular], params: null },
                            _multipart:
                             Multipart {
                               request: [Circular],
                               boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                               chunked: false,
                               body: null },
                            _redirect: [Circular],
                            _tunnel:
                             Tunnel {
                               request: [Circular],
                               proxyHeaderWhiteList:
                                [ 'accept',
                                  'accept-charset',
                                  'accept-encoding',
                                  'accept-language',
                                  'accept-ranges',
                                  'cache-control',
                                  'content-encoding',
                                  'content-language',
                                  'content-location',
                                  'content-md5',
                                  'content-range',
                                  'content-type',
                                  'connection',
                                  'date',
                                  'expect',
                                  'max-forwards',
                                  'pragma',
                                  'referer',
                                  'te',
                                  'user-agent',
                                  'via' ],
                               proxyHeaderExclusiveList: [] },
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         followRedirect: true,
                         followRedirects: true,
                         followAllRedirects: false,
                         followOriginalHttpMethod: false,
                         allowRedirect: [Function],
                         maxRedirects: 10,
                         redirects: [],
                         redirectsFollowed: 0,
                         removeRefererHeader: false },
                      _tunnel:
                       Tunnel {
                         request:
                          Request {
                            _events:
                             [Object: null prototype] {
                               error: [Function: bound ],
                               complete: [Function: bound ],
                               pipe: [Function],
                               data: [Function],
                               end: [Function] },
                            _eventsCount: 5,
                            _maxListeners: undefined,
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            readable: true,
                            writable: true,
                            explicitMethod: true,
                            _qs:
                             Querystring {
                               request: [Circular],
                               lib:
                                { formats:
                                   { default: 'RFC3986',
                                     formatters:
                                      { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                     RFC1738: 'RFC1738',
                                     RFC3986: 'RFC3986' },
                                  parse: [Function],
                                  stringify: [Function] },
                               useQuerystring: undefined,
                               parseOptions: {},
                               stringifyOptions: {} },
                            _auth:
                             Auth {
                               request: [Circular],
                               hasAuth: false,
                               sentAuth: false,
                               bearerToken: null,
                               user: null,
                               pass: null },
                            _oauth: OAuth { request: [Circular], params: null },
                            _multipart:
                             Multipart {
                               request: [Circular],
                               boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                               chunked: false,
                               body: null },
                            _redirect:
                             Redirect {
                               request: [Circular],
                               followRedirect: true,
                               followRedirects: true,
                               followAllRedirects: false,
                               followOriginalHttpMethod: false,
                               allowRedirect: [Function],
                               maxRedirects: 10,
                               redirects: [],
                               redirectsFollowed: 0,
                               removeRefererHeader: false },
                            _tunnel: [Circular],
                            _rp_resolve: [Function],
                            _rp_reject: [Function],
                            _rp_promise:
                             Promise {
                               _bitField: 16777216,
                               _fulfillmentHandler0: [Circular],
                               _rejectionHandler0: [Function],
                               _promise0: undefined,
                               _receiver0: undefined,
                               _onCancelField: undefined,
                               _branchesRemainingToCancel: 1,
                               _cancellationParent: undefined },
                            _rp_callbackOrig: undefined,
                            callback: [Function],
                            _rp_options:
                             { url: 'https://v1.peachapi.com/activity/isUnread',
                               method: 'GET',
                               headers: { Authorization: 'Bearer undefined' },
                               callback: [Function: RP$callback],
                               transform: undefined,
                               simple: true,
                               resolveWithFullResponse: false,
                               transform2xxOnly: false },
                            setHeader: [Function],
                            hasHeader: [Function],
                            getHeader: [Function],
                            removeHeader: [Function],
                            localAddress: undefined,
                            pool: {},
                            dests: [],
                            __isRequestRequest: true,
                            _callback: [Function: RP$callback],
                            uri:
                             Url {
                               protocol: 'https:',
                               slashes: true,
                               auth: null,
                               host: 'v1.peachapi.com',
                               port: 443,
                               hostname: 'v1.peachapi.com',
                               hash: null,
                               search: null,
                               query: null,
                               pathname: '/activity/isUnread',
                               path: '/activity/isUnread',
                               href: 'https://v1.peachapi.com/activity/isUnread' },
                            proxy: null,
                            tunnel: true,
                            setHost: true,
                            originalCookieHeader: undefined,
                            _disableCookies: true,
                            _jar: undefined,
                            port: 443,
                            host: 'v1.peachapi.com',
                            path: '/activity/isUnread',
                            httpModule:
                             { Agent: [Function: Agent],
                               globalAgent: [Circular],
                               Server: [Function: Server],
                               createServer: [Function: createServer],
                               get: [Function: get],
                               request: [Function: request] },
                            agentClass: [Function: Agent],
                            agent: [Circular],
                            _started: true,
                            href: 'https://v1.peachapi.com/activity/isUnread',
                            req: [Circular],
                            ntick: true,
                            response: [Circular],
                            originalHost: 'v1.peachapi.com',
                            originalHostHeaderName: 'host',
                            responseContent: [Circular],
                            _ended: true,
                            _callbackCalled: true },
                         proxyHeaderWhiteList:
                          [ 'accept',
                            'accept-charset',
                            'accept-encoding',
                            'accept-language',
                            'accept-ranges',
                            'cache-control',
                            'content-encoding',
                            'content-language',
                            'content-location',
                            'content-md5',
                            'content-range',
                            'content-type',
                            'connection',
                            'date',
                            'expect',
                            'max-forwards',
                            'pragma',
                            'referer',
                            'te',
                            'user-agent',
                            'via' ],
                         proxyHeaderExclusiveList: [] },
                      _rp_resolve: [Function],
                      _rp_reject: [Function],
                      _rp_promise:
                       Promise {
                         _bitField: 16777216,
                         _fulfillmentHandler0: [Circular],
                         _rejectionHandler0: [Function],
                         _promise0: undefined,
                         _receiver0: undefined,
                         _onCancelField: undefined,
                         _branchesRemainingToCancel: 1,
                         _cancellationParent: undefined },
                      _rp_callbackOrig: undefined,
                      callback: [Function],
                      _rp_options:
                       { url: 'https://v1.peachapi.com/activity/isUnread',
                         method: 'GET',
                         headers: { Authorization: 'Bearer undefined' },
                         callback: [Function: RP$callback],
                         transform: undefined,
                         simple: true,
                         resolveWithFullResponse: false,
                         transform2xxOnly: false },
                      setHeader: [Function],
                      hasHeader: [Function],
                      getHeader: [Function],
                      removeHeader: [Function],
                      localAddress: undefined,
                      pool: {},
                      dests: [],
                      __isRequestRequest: true,
                      _callback: [Function: RP$callback],
                      uri:
                       Url {
                         protocol: 'https:',
                         slashes: true,
                         auth: null,
                         host: 'v1.peachapi.com',
                         port: 443,
                         hostname: 'v1.peachapi.com',
                         hash: null,
                         search: null,
                         query: null,
                         pathname: '/activity/isUnread',
                         path: '/activity/isUnread',
                         href: 'https://v1.peachapi.com/activity/isUnread' },
                      proxy: null,
                      tunnel: true,
                      setHost: true,
                      originalCookieHeader: undefined,
                      _disableCookies: true,
                      _jar: undefined,
                      port: 443,
                      host: 'v1.peachapi.com',
                      path: null,
                      httpModule:
                       { Agent: [Function: Agent],
                         globalAgent: [Circular],
                         Server: [Function: Server],
                         createServer: [Function: createServer],
                         get: [Function: get],
                         request: [Function: request] },
                      agentClass: [Function: Agent],
                      agent: [Circular],
                      _started: true,
                      href: 'https://v1.peachapi.com/activity/isUnread',
                      _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                      encoding: null,
                      session:
                       <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                      singleUse: true } } ] },
           freeSockets: {},
           keepAliveMsecs: 1000,
           keepAlive: false,
           maxSockets: Infinity,
           maxFreeSockets: 256,
           maxCachedSessions: 100,
           _sessionCache:
            { map:
               { 'v1.peachapi.com:443::::::::::::::::':
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
              list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/activity/isUnread',
        _ended: true,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]:
         [Object: null prototype] {
           authorization: [ 'Authorization', 'Bearer undefined' ],
           host: [ 'host', 'v1.peachapi.com' ] } },
     request:
      Request {
        _events:
         [Object: null prototype] {
           error: [Function: bound ],
           complete: [Function: bound ],
           pipe: [Function],
           data: [Function],
           end: [Function] },
        _eventsCount: 5,
        _maxListeners: undefined,
        method: 'GET',
        headers: { Authorization: 'Bearer undefined' },
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs:
         Querystring {
           request: [Circular],
           lib:
            { formats:
               { default: 'RFC3986',
                 formatters:
                  { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                 RFC1738: 'RFC1738',
                 RFC3986: 'RFC3986' },
              parse: [Function],
              stringify: [Function] },
           useQuerystring: undefined,
           parseOptions: {},
           stringifyOptions: {} },
        _auth:
         Auth {
           request: [Circular],
           hasAuth: false,
           sentAuth: false,
           bearerToken: null,
           user: null,
           pass: null },
        _oauth: OAuth { request: [Circular], params: null },
        _multipart:
         Multipart {
           request: [Circular],
           boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
           chunked: false,
           body: null },
        _redirect:
         Redirect {
           request: [Circular],
           followRedirect: true,
           followRedirects: true,
           followAllRedirects: false,
           followOriginalHttpMethod: false,
           allowRedirect: [Function],
           maxRedirects: 10,
           redirects: [],
           redirectsFollowed: 0,
           removeRefererHeader: false },
        _tunnel:
         Tunnel {
           request: [Circular],
           proxyHeaderWhiteList:
            [ 'accept',
              'accept-charset',
              'accept-encoding',
              'accept-language',
              'accept-ranges',
              'cache-control',
              'content-encoding',
              'content-language',
              'content-location',
              'content-md5',
              'content-range',
              'content-type',
              'connection',
              'date',
              'expect',
              'max-forwards',
              'pragma',
              'referer',
              'te',
              'user-agent',
              'via' ],
           proxyHeaderExclusiveList: [] },
        _rp_resolve: [Function],
        _rp_reject: [Function],
        _rp_promise:
         Promise {
           _bitField: 16777216,
           _fulfillmentHandler0: [Circular],
           _rejectionHandler0: [Function],
           _promise0: undefined,
           _receiver0: undefined,
           _onCancelField: undefined,
           _branchesRemainingToCancel: 1,
           _cancellationParent: undefined },
        _rp_callbackOrig: undefined,
        callback: [Function],
        _rp_options:
         { url: 'https://v1.peachapi.com/activity/isUnread',
           method: 'GET',
           headers: { Authorization: 'Bearer undefined' },
           callback: [Function: RP$callback],
           transform: undefined,
           simple: true,
           resolveWithFullResponse: false,
           transform2xxOnly: false },
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        _callback: [Function: RP$callback],
        uri:
         Url {
           protocol: 'https:',
           slashes: true,
           auth: null,
           host: 'v1.peachapi.com',
           port: 443,
           hostname: 'v1.peachapi.com',
           hash: null,
           search: null,
           query: null,
           pathname: '/activity/isUnread',
           path: '/activity/isUnread',
           href: 'https://v1.peachapi.com/activity/isUnread' },
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'v1.peachapi.com',
        path: '/activity/isUnread',
        httpModule:
         { Agent: [Function: Agent],
           globalAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets:
               { 'v1.peachapi.com:443::::::::::::::::':
                  [ TLSSocket {
                      _tlsOptions:
                       { pipe: false,
                         secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                         isServer: false,
                         requestCert: true,
                         rejectUnauthorized: true,
                         session:
                          <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                         ALPNProtocols: undefined,
                         requestOCSP: undefined },
                      _secureEstablished: true,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      _SNICallback: null,
                      servername: 'v1.peachapi.com',
                      alpnProtocol: false,
                      authorized: true,
                      authorizationError: null,
                      encrypted: true,
                      _events:
                       [Object: null prototype] {
                         close:
                          [ [Function: onSocketCloseDestroySSL],
                            { [Function: bound onceWrapper] listener: [Function] },
                            [Function: onClose],
                            [Function: socketCloseListener] ],
                         end: [Function: onReadableStreamEnd],
                         secure: [Function: onConnectSecure],
                         free: [Function: onFree],
                         agentRemove: [Function: onRemove],
                         drain: [Function: ondrain],
                         error: [Function: socketErrorListener],
                         finish:
                          { [Function: bound onceWrapper] listener: [Function: destroy] } },
                      _eventsCount: 8,
                      connecting: false,
                      _hadError: false,
                      _handle: null,
                      _parent: null,
                      _host: 'v1.peachapi.com',
                      _readableState:
                       ReadableState {
                         objectMode: false,
                         highWaterMark: 16384,
                         buffer: BufferList { head: null, tail: null, length: 0 },
                         length: 0,
                         pipes: null,
                         pipesCount: 0,
                         flowing: true,
                         ended: true,
                         endEmitted: true,
                         reading: false,
                         sync: false,
                         needReadable: false,
                         emittedReadable: false,
                         readableListening: false,
                         resumeScheduled: false,
                         emitClose: false,
                         destroyed: true,
                         defaultEncoding: 'utf8',
                         awaitDrain: 0,
                         readingMore: false,
                         decoder: null,
                         encoding: null },
                      readable: false,
                      _maxListeners: undefined,
                      _writableState:
                       WritableState {
                         objectMode: false,
                         highWaterMark: 16384,
                         finalCalled: true,
                         needDrain: false,
                         ending: true,
                         ended: true,
                         finished: false,
                         destroyed: true,
                         decodeStrings: false,
                         defaultEncoding: 'utf8',
                         length: 0,
                         writing: false,
                         corked: 0,
                         sync: false,
                         bufferProcessing: false,
                         onwrite: [Function: bound onwrite],
                         writecb: null,
                         writelen: 0,
                         bufferedRequest: null,
                         lastBufferedRequest: null,
                         pendingcb: 1,
                         prefinished: false,
                         errorEmitted: false,
                         emitClose: false,
                         bufferedRequestCount: 0,
                         corkedRequestsFree:
                          { next: null,
                            entry: null,
                            finish: [Function: bound onCorkedFinish] } },
                      writable: false,
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: null,
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: null,
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: null,
                      _httpMessage:
                       ClientRequest {
                         _events:
                          [Object: null prototype] {
                            socket: [Function],
                            response: [Function: bound ],
                            error: [Function: bound ],
                            drain: [Function],
                            prefinish: [Function: requestOnPrefinish] },
                         _eventsCount: 5,
                         _maxListeners: undefined,
                         output: [],
                         outputEncodings: [],
                         outputCallbacks: [],
                         outputSize: 0,
                         writable: true,
                         _last: true,
                         chunkedEncoding: false,
                         shouldKeepAlive: false,
                         useChunkedEncodingByDefault: false,
                         sendDate: false,
                         _removedConnection: false,
                         _removedContLen: false,
                         _removedTE: false,
                         _contentLength: 0,
                         _hasBody: true,
                         _trailer: '',
                         finished: true,
                         _headerSent: true,
                         socket: [Circular],
                         connection: [Circular],
                         _header:
                          'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                         _onPendingData: [Function: noopPendingOutput],
                         agent: [Circular],
                         socketPath: undefined,
                         timeout: undefined,
                         method: 'GET',
                         path: '/activity/isUnread',
                         _ended: true,
                         res: [Circular],
                         aborted: false,
                         timeoutCb: null,
                         upgradeOrConnect: false,
                         parser: null,
                         maxHeadersCount: null,
                         [Symbol(isCorked)]: false,
                         [Symbol(outHeadersKey)]:
                          [Object: null prototype] {
                            authorization: [ 'Authorization', 'Bearer undefined' ],
                            host: [ 'host', 'v1.peachapi.com' ] } },
                      write: [Function: writeAfterFIN],
                      [Symbol(res)]:
                       TLSWrap {
                         _parent:
                          TCP {
                            reading: [Getter/Setter],
                            onread: null,
                            onconnection: null,
                            [Symbol(owner)]: [Circular],
                            [Symbol(handle_onclose)]: [Function: done] },
                         _parentWrap: undefined,
                         _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                         reading: true,
                         onread: [Function: noop],
                         onhandshakestart: [Function: noop],
                         onhandshakedone: [Function: bound ],
                         onocspresponse: [Function: onocspresponse],
                         onerror: [Function: onerror],
                         [Symbol(owner)]: [Circular] },
                      [Symbol(asyncId)]: 31,
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBytesRead)]: 380,
                      [Symbol(kBytesWritten)]: 110,
                      [Symbol(connect-options)]:
                       { rejectUnauthorized: true,
                         ciphers:
                          'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                         checkServerIdentity: [Function: checkServerIdentity],
                         minDHSize: 1024,
                         servername: 'v1.peachapi.com',
                         _defaultAgent: [Circular],
                         _events:
                          [Object: null prototype] {
                            error: [Function: bound ],
                            complete: [Function: bound ],
                            pipe: [Function],
                            data: [Function],
                            end: [Function] },
                         _eventsCount: 3,
                         _maxListeners: undefined,
                         method: 'GET',
                         headers: { Authorization: 'Bearer undefined' },
                         readable: true,
                         writable: true,
                         explicitMethod: true,
                         _qs:
                          Querystring {
                            request: [Circular],
                            lib:
                             { formats:
                                { default: 'RFC3986',
                                  formatters:
                                   { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                  RFC1738: 'RFC1738',
                                  RFC3986: 'RFC3986' },
                               parse: [Function],
                               stringify: [Function] },
                            useQuerystring: undefined,
                            parseOptions: {},
                            stringifyOptions: {} },
                         _auth:
                          Auth {
                            request: [Circular],
                            hasAuth: false,
                            sentAuth: false,
                            bearerToken: null,
                            user: null,
                            pass: null },
                         _oauth: OAuth { request: [Circular], params: null },
                         _multipart:
                          Multipart {
                            request: [Circular],
                            boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                            chunked: false,
                            body: null },
                         _redirect:
                          Redirect {
                            request: [Circular],
                            followRedirect: true,
                            followRedirects: true,
                            followAllRedirects: false,
                            followOriginalHttpMethod: false,
                            allowRedirect: [Function],
                            maxRedirects: 10,
                            redirects: [],
                            redirectsFollowed: 0,
                            removeRefererHeader: false },
                         _tunnel:
                          Tunnel {
                            request: [Circular],
                            proxyHeaderWhiteList:
                             [ 'accept',
                               'accept-charset',
                               'accept-encoding',
                               'accept-language',
                               'accept-ranges',
                               'cache-control',
                               'content-encoding',
                               'content-language',
                               'content-location',
                               'content-md5',
                               'content-range',
                               'content-type',
                               'connection',
                               'date',
                               'expect',
                               'max-forwards',
                               'pragma',
                               'referer',
                               'te',
                               'user-agent',
                               'via' ],
                            proxyHeaderExclusiveList: [] },
                         _rp_resolve: [Function],
                         _rp_reject: [Function],
                         _rp_promise:
                          Promise {
                            _bitField: 16777216,
                            _fulfillmentHandler0: [Circular],
                            _rejectionHandler0: [Function],
                            _promise0: undefined,
                            _receiver0: undefined,
                            _onCancelField: undefined,
                            _branchesRemainingToCancel: 1,
                            _cancellationParent: undefined },
                         _rp_callbackOrig: undefined,
                         callback: [Function],
                         _rp_options:
                          { url: 'https://v1.peachapi.com/activity/isUnread',
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            callback: [Function: RP$callback],
                            transform: undefined,
                            simple: true,
                            resolveWithFullResponse: false,
                            transform2xxOnly: false },
                         setHeader: [Function],
                         hasHeader: [Function],
                         getHeader: [Function],
                         removeHeader: [Function],
                         localAddress: undefined,
                         pool: {},
                         dests: [],
                         __isRequestRequest: true,
                         _callback: [Function: RP$callback],
                         uri:
                          Url {
                            protocol: 'https:',
                            slashes: true,
                            auth: null,
                            host: 'v1.peachapi.com',
                            port: 443,
                            hostname: 'v1.peachapi.com',
                            hash: null,
                            search: null,
                            query: null,
                            pathname: '/activity/isUnread',
                            path: '/activity/isUnread',
                            href: 'https://v1.peachapi.com/activity/isUnread' },
                         proxy: null,
                         tunnel: true,
                         setHost: true,
                         originalCookieHeader: undefined,
                         _disableCookies: true,
                         _jar: undefined,
                         port: 443,
                         host: 'v1.peachapi.com',
                         path: null,
                         httpModule: [Circular],
                         agentClass: [Function: Agent],
                         agent: [Circular],
                         _started: true,
                         href: 'https://v1.peachapi.com/activity/isUnread',
                         _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                         encoding: null,
                         session:
                          <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                         singleUse: true } } ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           Server: [Function: Server],
           createServer: [Function: createServer],
           get: [Function: get],
           request: [Function: request] },
        agentClass: [Function: Agent],
        agent:
         Agent {
           _events: [Object: null prototype] { free: [Function] },
           _eventsCount: 1,
           _maxListeners: undefined,
           defaultPort: 443,
           protocol: 'https:',
           options: { path: null },
           requests: {},
           sockets:
            { 'v1.peachapi.com:443::::::::::::::::':
               [ TLSSocket {
                   _tlsOptions:
                    { pipe: false,
                      secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session:
                       <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined },
                   _secureEstablished: true,
                   _securePending: false,
                   _newSessionPending: false,
                   _controlReleased: true,
                   _SNICallback: null,
                   servername: 'v1.peachapi.com',
                   alpnProtocol: false,
                   authorized: true,
                   authorizationError: null,
                   encrypted: true,
                   _events:
                    [Object: null prototype] {
                      close:
                       [ [Function: onSocketCloseDestroySSL],
                         { [Function: bound onceWrapper] listener: [Function] },
                         [Function: onClose],
                         [Function: socketCloseListener] ],
                      end: [Function: onReadableStreamEnd],
                      secure: [Function: onConnectSecure],
                      free: [Function: onFree],
                      agentRemove: [Function: onRemove],
                      drain: [Function: ondrain],
                      error: [Function: socketErrorListener],
                      finish:
                       { [Function: bound onceWrapper] listener: [Function: destroy] } },
                   _eventsCount: 8,
                   connecting: false,
                   _hadError: false,
                   _handle: null,
                   _parent: null,
                   _host: 'v1.peachapi.com',
                   _readableState:
                    ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: null,
                      pipesCount: 0,
                      flowing: true,
                      ended: true,
                      endEmitted: true,
                      reading: false,
                      sync: false,
                      needReadable: false,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      emitClose: false,
                      destroyed: true,
                      defaultEncoding: 'utf8',
                      awaitDrain: 0,
                      readingMore: false,
                      decoder: null,
                      encoding: null },
                   readable: false,
                   _maxListeners: undefined,
                   _writableState:
                    WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: true,
                      needDrain: false,
                      ending: true,
                      ended: true,
                      finished: false,
                      destroyed: true,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 0,
                      writing: false,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: null,
                      writelen: 0,
                      bufferedRequest: null,
                      lastBufferedRequest: null,
                      pendingcb: 1,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      bufferedRequestCount: 0,
                      corkedRequestsFree:
                       { next: null,
                         entry: null,
                         finish: [Function: bound onCorkedFinish] } },
                   writable: false,
                   allowHalfOpen: false,
                   _sockname: null,
                   _pendingData: null,
                   _pendingEncoding: '',
                   server: undefined,
                   _server: null,
                   ssl: null,
                   _requestCert: true,
                   _rejectUnauthorized: true,
                   parser: null,
                   _httpMessage:
                    ClientRequest {
                      _events:
                       [Object: null prototype] {
                         socket: [Function],
                         response: [Function: bound ],
                         error: [Function: bound ],
                         drain: [Function],
                         prefinish: [Function: requestOnPrefinish] },
                      _eventsCount: 5,
                      _maxListeners: undefined,
                      output: [],
                      outputEncodings: [],
                      outputCallbacks: [],
                      outputSize: 0,
                      writable: true,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      useChunkedEncodingByDefault: false,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      _contentLength: 0,
                      _hasBody: true,
                      _trailer: '',
                      finished: true,
                      _headerSent: true,
                      socket: [Circular],
                      connection: [Circular],
                      _header:
                       'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
                      _onPendingData: [Function: noopPendingOutput],
                      agent: [Circular],
                      socketPath: undefined,
                      timeout: undefined,
                      method: 'GET',
                      path: '/activity/isUnread',
                      _ended: true,
                      res: [Circular],
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: null,
                      maxHeadersCount: null,
                      [Symbol(isCorked)]: false,
                      [Symbol(outHeadersKey)]:
                       [Object: null prototype] {
                         authorization: [ 'Authorization', 'Bearer undefined' ],
                         host: [ 'host', 'v1.peachapi.com' ] } },
                   write: [Function: writeAfterFIN],
                   [Symbol(res)]:
                    TLSWrap {
                      _parent:
                       TCP {
                         reading: [Getter/Setter],
                         onread: null,
                         onconnection: null,
                         [Symbol(owner)]: [Circular],
                         [Symbol(handle_onclose)]: [Function: done] },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                      reading: true,
                      onread: [Function: noop],
                      onhandshakestart: [Function: noop],
                      onhandshakedone: [Function: bound ],
                      onocspresponse: [Function: onocspresponse],
                      onerror: [Function: onerror],
                      [Symbol(owner)]: [Circular] },
                   [Symbol(asyncId)]: 31,
                   [Symbol(lastWriteQueueSize)]: 0,
                   [Symbol(timeout)]: null,
                   [Symbol(kBytesRead)]: 380,
                   [Symbol(kBytesWritten)]: 110,
                   [Symbol(connect-options)]:
                    { rejectUnauthorized: true,
                      ciphers:
                       'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      servername: 'v1.peachapi.com',
                      _defaultAgent: [Circular],
                      _events:
                       [Object: null prototype] {
                         error: [Function: bound ],
                         complete: [Function: bound ],
                         pipe: [Function],
                         data: [Function],
                         end: [Function] },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      method: 'GET',
                      headers: { Authorization: 'Bearer undefined' },
                      readable: true,
                      writable: true,
                      explicitMethod: true,
                      _qs:
                       Querystring {
                         request: [Circular],
                         lib:
                          { formats:
                             { default: 'RFC3986',
                               formatters:
                                { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                               RFC1738: 'RFC1738',
                               RFC3986: 'RFC3986' },
                            parse: [Function],
                            stringify: [Function] },
                         useQuerystring: undefined,
                         parseOptions: {},
                         stringifyOptions: {} },
                      _auth:
                       Auth {
                         request: [Circular],
                         hasAuth: false,
                         sentAuth: false,
                         bearerToken: null,
                         user: null,
                         pass: null },
                      _oauth: OAuth { request: [Circular], params: null },
                      _multipart:
                       Multipart {
                         request: [Circular],
                         boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                         chunked: false,
                         body: null },
                      _redirect:
                       Redirect {
                         request: [Circular],
                         followRedirect: true,
                         followRedirects: true,
                         followAllRedirects: false,
                         followOriginalHttpMethod: false,
                         allowRedirect: [Function],
                         maxRedirects: 10,
                         redirects: [],
                         redirectsFollowed: 0,
                         removeRefererHeader: false },
                      _tunnel:
                       Tunnel {
                         request: [Circular],
                         proxyHeaderWhiteList:
                          [ 'accept',
                            'accept-charset',
                            'accept-encoding',
                            'accept-language',
                            'accept-ranges',
                            'cache-control',
                            'content-encoding',
                            'content-language',
                            'content-location',
                            'content-md5',
                            'content-range',
                            'content-type',
                            'connection',
                            'date',
                            'expect',
                            'max-forwards',
                            'pragma',
                            'referer',
                            'te',
                            'user-agent',
                            'via' ],
                         proxyHeaderExclusiveList: [] },
                      _rp_resolve: [Function],
                      _rp_reject: [Function],
                      _rp_promise:
                       Promise {
                         _bitField: 16777216,
                         _fulfillmentHandler0: [Circular],
                         _rejectionHandler0: [Function],
                         _promise0: undefined,
                         _receiver0: undefined,
                         _onCancelField: undefined,
                         _branchesRemainingToCancel: 1,
                         _cancellationParent: undefined },
                      _rp_callbackOrig: undefined,
                      callback: [Function],
                      _rp_options:
                       { url: 'https://v1.peachapi.com/activity/isUnread',
                         method: 'GET',
                         headers: { Authorization: 'Bearer undefined' },
                         callback: [Function: RP$callback],
                         transform: undefined,
                         simple: true,
                         resolveWithFullResponse: false,
                         transform2xxOnly: false },
                      setHeader: [Function],
                      hasHeader: [Function],
                      getHeader: [Function],
                      removeHeader: [Function],
                      localAddress: undefined,
                      pool: {},
                      dests: [],
                      __isRequestRequest: true,
                      _callback: [Function: RP$callback],
                      uri:
                       Url {
                         protocol: 'https:',
                         slashes: true,
                         auth: null,
                         host: 'v1.peachapi.com',
                         port: 443,
                         hostname: 'v1.peachapi.com',
                         hash: null,
                         search: null,
                         query: null,
                         pathname: '/activity/isUnread',
                         path: '/activity/isUnread',
                         href: 'https://v1.peachapi.com/activity/isUnread' },
                      proxy: null,
                      tunnel: true,
                      setHost: true,
                      originalCookieHeader: undefined,
                      _disableCookies: true,
                      _jar: undefined,
                      port: 443,
                      host: 'v1.peachapi.com',
                      path: null,
                      httpModule:
                       { Agent: [Function: Agent],
                         globalAgent: [Circular],
                         Server: [Function: Server],
                         createServer: [Function: createServer],
                         get: [Function: get],
                         request: [Function: request] },
                      agentClass: [Function: Agent],
                      agent: [Circular],
                      _started: true,
                      href: 'https://v1.peachapi.com/activity/isUnread',
                      _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                      encoding: null,
                      session:
                       <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                      singleUse: true } } ] },
           freeSockets: {},
           keepAliveMsecs: 1000,
           keepAlive: false,
           maxSockets: Infinity,
           maxFreeSockets: 256,
           maxCachedSessions: 100,
           _sessionCache:
            { map:
               { 'v1.peachapi.com:443::::::::::::::::':
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
              list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
        _started: true,
        href: 'https://v1.peachapi.com/activity/isUnread',
        req:
         ClientRequest {
           _events:
            [Object: null prototype] {
              socket: [Function],
              response: [Function: bound ],
              error: [Function: bound ],
              drain: [Function],
              prefinish: [Function: requestOnPrefinish] },
           _eventsCount: 5,
           _maxListeners: undefined,
           output: [],
           outputEncodings: [],
           outputCallbacks: [],
           outputSize: 0,
           writable: true,
           _last: true,
           chunkedEncoding: false,
           shouldKeepAlive: false,
           useChunkedEncodingByDefault: false,
           sendDate: false,
           _removedConnection: false,
           _removedContLen: false,
           _removedTE: false,
           _contentLength: 0,
           _hasBody: true,
           _trailer: '',
           finished: true,
           _headerSent: true,
           socket:
            TLSSocket {
              _tlsOptions:
               { pipe: false,
                 secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                 isServer: false,
                 requestCert: true,
                 rejectUnauthorized: true,
                 session:
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                 ALPNProtocols: undefined,
                 requestOCSP: undefined },
              _secureEstablished: true,
              _securePending: false,
              _newSessionPending: false,
              _controlReleased: true,
              _SNICallback: null,
              servername: 'v1.peachapi.com',
              alpnProtocol: false,
              authorized: true,
              authorizationError: null,
              encrypted: true,
              _events:
               [Object: null prototype] {
                 close:
                  [ [Function: onSocketCloseDestroySSL],
                    { [Function: bound onceWrapper] listener: [Function] },
                    [Function: onClose],
                    [Function: socketCloseListener] ],
                 end: [Function: onReadableStreamEnd],
                 secure: [Function: onConnectSecure],
                 free: [Function: onFree],
                 agentRemove: [Function: onRemove],
                 drain: [Function: ondrain],
                 error: [Function: socketErrorListener],
                 finish:
                  { [Function: bound onceWrapper] listener: [Function: destroy] } },
              _eventsCount: 8,
              connecting: false,
              _hadError: false,
              _handle: null,
              _parent: null,
              _host: 'v1.peachapi.com',
              _readableState:
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: false,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 emitClose: false,
                 destroyed: true,
                 defaultEncoding: 'utf8',
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: false,
              _maxListeners: undefined,
              _writableState:
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 finalCalled: true,
                 needDrain: false,
                 ending: true,
                 ended: true,
                 finished: false,
                 destroyed: true,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function: bound onwrite],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 1,
                 prefinished: false,
                 errorEmitted: false,
                 emitClose: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree:
                  { next: null,
                    entry: null,
                    finish: [Function: bound onCorkedFinish] } },
              writable: false,
              allowHalfOpen: false,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: undefined,
              _server: null,
              ssl: null,
              _requestCert: true,
              _rejectUnauthorized: true,
              parser: null,
              _httpMessage: [Circular],
              write: [Function: writeAfterFIN],
              [Symbol(res)]:
               TLSWrap {
                 _parent:
                  TCP {
                    reading: [Getter/Setter],
                    onread: null,
                    onconnection: null,
                    [Symbol(owner)]: [Circular],
                    [Symbol(handle_onclose)]: [Function: done] },
                 _parentWrap: undefined,
                 _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                 reading: true,
                 onread: [Function: noop],
                 onhandshakestart: [Function: noop],
                 onhandshakedone: [Function: bound ],
                 onocspresponse: [Function: onocspresponse],
                 onerror: [Function: onerror],
                 [Symbol(owner)]: [Circular] },
              [Symbol(asyncId)]: 31,
              [Symbol(lastWriteQueueSize)]: 0,
              [Symbol(timeout)]: null,
              [Symbol(kBytesRead)]: 380,
              [Symbol(kBytesWritten)]: 110,
              [Symbol(connect-options)]:
               { rejectUnauthorized: true,
                 ciphers:
                  'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                 checkServerIdentity: [Function: checkServerIdentity],
                 minDHSize: 1024,
                 servername: 'v1.peachapi.com',
                 _defaultAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: null,
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                 encoding: null,
                 session:
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                 singleUse: true } },
           connection:
            TLSSocket {
              _tlsOptions:
               { pipe: false,
                 secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                 isServer: false,
                 requestCert: true,
                 rejectUnauthorized: true,
                 session:
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                 ALPNProtocols: undefined,
                 requestOCSP: undefined },
              _secureEstablished: true,
              _securePending: false,
              _newSessionPending: false,
              _controlReleased: true,
              _SNICallback: null,
              servername: 'v1.peachapi.com',
              alpnProtocol: false,
              authorized: true,
              authorizationError: null,
              encrypted: true,
              _events:
               [Object: null prototype] {
                 close:
                  [ [Function: onSocketCloseDestroySSL],
                    { [Function: bound onceWrapper] listener: [Function] },
                    [Function: onClose],
                    [Function: socketCloseListener] ],
                 end: [Function: onReadableStreamEnd],
                 secure: [Function: onConnectSecure],
                 free: [Function: onFree],
                 agentRemove: [Function: onRemove],
                 drain: [Function: ondrain],
                 error: [Function: socketErrorListener],
                 finish:
                  { [Function: bound onceWrapper] listener: [Function: destroy] } },
              _eventsCount: 8,
              connecting: false,
              _hadError: false,
              _handle: null,
              _parent: null,
              _host: 'v1.peachapi.com',
              _readableState:
               ReadableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 buffer: BufferList { head: null, tail: null, length: 0 },
                 length: 0,
                 pipes: null,
                 pipesCount: 0,
                 flowing: true,
                 ended: true,
                 endEmitted: true,
                 reading: false,
                 sync: false,
                 needReadable: false,
                 emittedReadable: false,
                 readableListening: false,
                 resumeScheduled: false,
                 emitClose: false,
                 destroyed: true,
                 defaultEncoding: 'utf8',
                 awaitDrain: 0,
                 readingMore: false,
                 decoder: null,
                 encoding: null },
              readable: false,
              _maxListeners: undefined,
              _writableState:
               WritableState {
                 objectMode: false,
                 highWaterMark: 16384,
                 finalCalled: true,
                 needDrain: false,
                 ending: true,
                 ended: true,
                 finished: false,
                 destroyed: true,
                 decodeStrings: false,
                 defaultEncoding: 'utf8',
                 length: 0,
                 writing: false,
                 corked: 0,
                 sync: false,
                 bufferProcessing: false,
                 onwrite: [Function: bound onwrite],
                 writecb: null,
                 writelen: 0,
                 bufferedRequest: null,
                 lastBufferedRequest: null,
                 pendingcb: 1,
                 prefinished: false,
                 errorEmitted: false,
                 emitClose: false,
                 bufferedRequestCount: 0,
                 corkedRequestsFree:
                  { next: null,
                    entry: null,
                    finish: [Function: bound onCorkedFinish] } },
              writable: false,
              allowHalfOpen: false,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: undefined,
              _server: null,
              ssl: null,
              _requestCert: true,
              _rejectUnauthorized: true,
              parser: null,
              _httpMessage: [Circular],
              write: [Function: writeAfterFIN],
              [Symbol(res)]:
               TLSWrap {
                 _parent:
                  TCP {
                    reading: [Getter/Setter],
                    onread: null,
                    onconnection: null,
                    [Symbol(owner)]: [Circular],
                    [Symbol(handle_onclose)]: [Function: done] },
                 _parentWrap: undefined,
                 _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                 reading: true,
                 onread: [Function: noop],
                 onhandshakestart: [Function: noop],
                 onhandshakedone: [Function: bound ],
                 onocspresponse: [Function: onocspresponse],
                 onerror: [Function: onerror],
                 [Symbol(owner)]: [Circular] },
              [Symbol(asyncId)]: 31,
              [Symbol(lastWriteQueueSize)]: 0,
              [Symbol(timeout)]: null,
              [Symbol(kBytesRead)]: 380,
              [Symbol(kBytesWritten)]: 110,
              [Symbol(connect-options)]:
               { rejectUnauthorized: true,
                 ciphers:
                  'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                 checkServerIdentity: [Function: checkServerIdentity],
                 minDHSize: 1024,
                 servername: 'v1.peachapi.com',
                 _defaultAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _events:
                  [Object: null prototype] {
                    error: [Function: bound ],
                    complete: [Function: bound ],
                    pipe: [Function],
                    data: [Function],
                    end: [Function] },
                 _eventsCount: 3,
                 _maxListeners: undefined,
                 method: 'GET',
                 headers: { Authorization: 'Bearer undefined' },
                 readable: true,
                 writable: true,
                 explicitMethod: true,
                 _qs:
                  Querystring {
                    request: [Circular],
                    lib:
                     { formats:
                        { default: 'RFC3986',
                          formatters:
                           { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                          RFC1738: 'RFC1738',
                          RFC3986: 'RFC3986' },
                       parse: [Function],
                       stringify: [Function] },
                    useQuerystring: undefined,
                    parseOptions: {},
                    stringifyOptions: {} },
                 _auth:
                  Auth {
                    request: [Circular],
                    hasAuth: false,
                    sentAuth: false,
                    bearerToken: null,
                    user: null,
                    pass: null },
                 _oauth: OAuth { request: [Circular], params: null },
                 _multipart:
                  Multipart {
                    request: [Circular],
                    boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                    chunked: false,
                    body: null },
                 _redirect:
                  Redirect {
                    request: [Circular],
                    followRedirect: true,
                    followRedirects: true,
                    followAllRedirects: false,
                    followOriginalHttpMethod: false,
                    allowRedirect: [Function],
                    maxRedirects: 10,
                    redirects: [],
                    redirectsFollowed: 0,
                    removeRefererHeader: false },
                 _tunnel:
                  Tunnel {
                    request: [Circular],
                    proxyHeaderWhiteList:
                     [ 'accept',
                       'accept-charset',
                       'accept-encoding',
                       'accept-language',
                       'accept-ranges',
                       'cache-control',
                       'content-encoding',
                       'content-language',
                       'content-location',
                       'content-md5',
                       'content-range',
                       'content-type',
                       'connection',
                       'date',
                       'expect',
                       'max-forwards',
                       'pragma',
                       'referer',
                       'te',
                       'user-agent',
                       'via' ],
                    proxyHeaderExclusiveList: [] },
                 _rp_resolve: [Function],
                 _rp_reject: [Function],
                 _rp_promise:
                  Promise {
                    _bitField: 16777216,
                    _fulfillmentHandler0: [Circular],
                    _rejectionHandler0: [Function],
                    _promise0: undefined,
                    _receiver0: undefined,
                    _onCancelField: undefined,
                    _branchesRemainingToCancel: 1,
                    _cancellationParent: undefined },
                 _rp_callbackOrig: undefined,
                 callback: [Function],
                 _rp_options:
                  { url: 'https://v1.peachapi.com/activity/isUnread',
                    method: 'GET',
                    headers: { Authorization: 'Bearer undefined' },
                    callback: [Function: RP$callback],
                    transform: undefined,
                    simple: true,
                    resolveWithFullResponse: false,
                    transform2xxOnly: false },
                 setHeader: [Function],
                 hasHeader: [Function],
                 getHeader: [Function],
                 removeHeader: [Function],
                 localAddress: undefined,
                 pool: {},
                 dests: [],
                 __isRequestRequest: true,
                 _callback: [Function: RP$callback],
                 uri:
                  Url {
                    protocol: 'https:',
                    slashes: true,
                    auth: null,
                    host: 'v1.peachapi.com',
                    port: 443,
                    hostname: 'v1.peachapi.com',
                    hash: null,
                    search: null,
                    query: null,
                    pathname: '/activity/isUnread',
                    path: '/activity/isUnread',
                    href: 'https://v1.peachapi.com/activity/isUnread' },
                 proxy: null,
                 tunnel: true,
                 setHost: true,
                 originalCookieHeader: undefined,
                 _disableCookies: true,
                 _jar: undefined,
                 port: 443,
                 host: 'v1.peachapi.com',
                 path: null,
                 httpModule:
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { 'v1.peachapi.com:443::::::::::::::::':
                              <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                          list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 agentClass: [Function: Agent],
                 agent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets: { 'v1.peachapi.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { 'v1.peachapi.com:443::::::::::::::::':
                           <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                       list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
                 _started: true,
                 href: 'https://v1.peachapi.com/activity/isUnread',
                 _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                 encoding: null,
                 session:
                  <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                 singleUse: true } },
           _header:
            'GET /activity/isUnread HTTP/1.1\r\nAuthorization: Bearer undefined\r\nhost: v1.peachapi.com\r\nConnection: close\r\n\r\n',
           _onPendingData: [Function: noopPendingOutput],
           agent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets:
               { 'v1.peachapi.com:443::::::::::::::::':
                  [ TLSSocket {
                      _tlsOptions:
                       { pipe: false,
                         secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                         isServer: false,
                         requestCert: true,
                         rejectUnauthorized: true,
                         session:
                          <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                         ALPNProtocols: undefined,
                         requestOCSP: undefined },
                      _secureEstablished: true,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      _SNICallback: null,
                      servername: 'v1.peachapi.com',
                      alpnProtocol: false,
                      authorized: true,
                      authorizationError: null,
                      encrypted: true,
                      _events:
                       [Object: null prototype] {
                         close:
                          [ [Function: onSocketCloseDestroySSL],
                            { [Function: bound onceWrapper] listener: [Function] },
                            [Function: onClose],
                            [Function: socketCloseListener] ],
                         end: [Function: onReadableStreamEnd],
                         secure: [Function: onConnectSecure],
                         free: [Function: onFree],
                         agentRemove: [Function: onRemove],
                         drain: [Function: ondrain],
                         error: [Function: socketErrorListener],
                         finish:
                          { [Function: bound onceWrapper] listener: [Function: destroy] } },
                      _eventsCount: 8,
                      connecting: false,
                      _hadError: false,
                      _handle: null,
                      _parent: null,
                      _host: 'v1.peachapi.com',
                      _readableState:
                       ReadableState {
                         objectMode: false,
                         highWaterMark: 16384,
                         buffer: BufferList { head: null, tail: null, length: 0 },
                         length: 0,
                         pipes: null,
                         pipesCount: 0,
                         flowing: true,
                         ended: true,
                         endEmitted: true,
                         reading: false,
                         sync: false,
                         needReadable: false,
                         emittedReadable: false,
                         readableListening: false,
                         resumeScheduled: false,
                         emitClose: false,
                         destroyed: true,
                         defaultEncoding: 'utf8',
                         awaitDrain: 0,
                         readingMore: false,
                         decoder: null,
                         encoding: null },
                      readable: false,
                      _maxListeners: undefined,
                      _writableState:
                       WritableState {
                         objectMode: false,
                         highWaterMark: 16384,
                         finalCalled: true,
                         needDrain: false,
                         ending: true,
                         ended: true,
                         finished: false,
                         destroyed: true,
                         decodeStrings: false,
                         defaultEncoding: 'utf8',
                         length: 0,
                         writing: false,
                         corked: 0,
                         sync: false,
                         bufferProcessing: false,
                         onwrite: [Function: bound onwrite],
                         writecb: null,
                         writelen: 0,
                         bufferedRequest: null,
                         lastBufferedRequest: null,
                         pendingcb: 1,
                         prefinished: false,
                         errorEmitted: false,
                         emitClose: false,
                         bufferedRequestCount: 0,
                         corkedRequestsFree:
                          { next: null,
                            entry: null,
                            finish: [Function: bound onCorkedFinish] } },
                      writable: false,
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: null,
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: null,
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: null,
                      _httpMessage: [Circular],
                      write: [Function: writeAfterFIN],
                      [Symbol(res)]:
                       TLSWrap {
                         _parent:
                          TCP {
                            reading: [Getter/Setter],
                            onread: null,
                            onconnection: null,
                            [Symbol(owner)]: [Circular],
                            [Symbol(handle_onclose)]: [Function: done] },
                         _parentWrap: undefined,
                         _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                         reading: true,
                         onread: [Function: noop],
                         onhandshakestart: [Function: noop],
                         onhandshakedone: [Function: bound ],
                         onocspresponse: [Function: onocspresponse],
                         onerror: [Function: onerror],
                         [Symbol(owner)]: [Circular] },
                      [Symbol(asyncId)]: 31,
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBytesRead)]: 380,
                      [Symbol(kBytesWritten)]: 110,
                      [Symbol(connect-options)]:
                       { rejectUnauthorized: true,
                         ciphers:
                          'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                         checkServerIdentity: [Function: checkServerIdentity],
                         minDHSize: 1024,
                         servername: 'v1.peachapi.com',
                         _defaultAgent: [Circular],
                         _events:
                          [Object: null prototype] {
                            error: [Function: bound ],
                            complete: [Function: bound ],
                            pipe: [Function],
                            data: [Function],
                            end: [Function] },
                         _eventsCount: 3,
                         _maxListeners: undefined,
                         method: 'GET',
                         headers: { Authorization: 'Bearer undefined' },
                         readable: true,
                         writable: true,
                         explicitMethod: true,
                         _qs:
                          Querystring {
                            request: [Circular],
                            lib:
                             { formats:
                                { default: 'RFC3986',
                                  formatters:
                                   { RFC1738: [Function: RFC1738], RFC3986: [Function: RFC3986] },
                                  RFC1738: 'RFC1738',
                                  RFC3986: 'RFC3986' },
                               parse: [Function],
                               stringify: [Function] },
                            useQuerystring: undefined,
                            parseOptions: {},
                            stringifyOptions: {} },
                         _auth:
                          Auth {
                            request: [Circular],
                            hasAuth: false,
                            sentAuth: false,
                            bearerToken: null,
                            user: null,
                            pass: null },
                         _oauth: OAuth { request: [Circular], params: null },
                         _multipart:
                          Multipart {
                            request: [Circular],
                            boundary: 'fe36622c-5031-48a9-ab9c-891d0a35725e',
                            chunked: false,
                            body: null },
                         _redirect:
                          Redirect {
                            request: [Circular],
                            followRedirect: true,
                            followRedirects: true,
                            followAllRedirects: false,
                            followOriginalHttpMethod: false,
                            allowRedirect: [Function],
                            maxRedirects: 10,
                            redirects: [],
                            redirectsFollowed: 0,
                            removeRefererHeader: false },
                         _tunnel:
                          Tunnel {
                            request: [Circular],
                            proxyHeaderWhiteList:
                             [ 'accept',
                               'accept-charset',
                               'accept-encoding',
                               'accept-language',
                               'accept-ranges',
                               'cache-control',
                               'content-encoding',
                               'content-language',
                               'content-location',
                               'content-md5',
                               'content-range',
                               'content-type',
                               'connection',
                               'date',
                               'expect',
                               'max-forwards',
                               'pragma',
                               'referer',
                               'te',
                               'user-agent',
                               'via' ],
                            proxyHeaderExclusiveList: [] },
                         _rp_resolve: [Function],
                         _rp_reject: [Function],
                         _rp_promise:
                          Promise {
                            _bitField: 16777216,
                            _fulfillmentHandler0: [Circular],
                            _rejectionHandler0: [Function],
                            _promise0: undefined,
                            _receiver0: undefined,
                            _onCancelField: undefined,
                            _branchesRemainingToCancel: 1,
                            _cancellationParent: undefined },
                         _rp_callbackOrig: undefined,
                         callback: [Function],
                         _rp_options:
                          { url: 'https://v1.peachapi.com/activity/isUnread',
                            method: 'GET',
                            headers: { Authorization: 'Bearer undefined' },
                            callback: [Function: RP$callback],
                            transform: undefined,
                            simple: true,
                            resolveWithFullResponse: false,
                            transform2xxOnly: false },
                         setHeader: [Function],
                         hasHeader: [Function],
                         getHeader: [Function],
                         removeHeader: [Function],
                         localAddress: undefined,
                         pool: {},
                         dests: [],
                         __isRequestRequest: true,
                         _callback: [Function: RP$callback],
                         uri:
                          Url {
                            protocol: 'https:',
                            slashes: true,
                            auth: null,
                            host: 'v1.peachapi.com',
                            port: 443,
                            hostname: 'v1.peachapi.com',
                            hash: null,
                            search: null,
                            query: null,
                            pathname: '/activity/isUnread',
                            path: '/activity/isUnread',
                            href: 'https://v1.peachapi.com/activity/isUnread' },
                         proxy: null,
                         tunnel: true,
                         setHost: true,
                         originalCookieHeader: undefined,
                         _disableCookies: true,
                         _jar: undefined,
                         port: 443,
                         host: 'v1.peachapi.com',
                         path: null,
                         httpModule:
                          { Agent: [Function: Agent],
                            globalAgent: [Circular],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request] },
                         agentClass: [Function: Agent],
                         agent: [Circular],
                         _started: true,
                         href: 'https://v1.peachapi.com/activity/isUnread',
                         _agentKey: 'v1.peachapi.com:443::::::::::::::::',
                         encoding: null,
                         session:
                          <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f4 37 4f 5d f0 72 e7 b3 98 46 fa f6 54 24 e2 c1 da bc 53 62 de e2 76 cb f5 43 74 95 e3 04 02 59 04 ... 1456 more bytes>,
                         singleUse: true } } ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { 'v1.peachapi.com:443::::::::::::::::':
                     <Buffer 30 82 05 de 02 01 01 02 02 03 03 04 02 c0 2f 04 20 63 25 d4 16 47 2c 7e d4 2c a0 18 14 fb 2f 8f 09 8a 3b b6 62 5e 23 a6 16 2e 11 d6 72 4d d2 c3 37 04 ... 1456 more bytes> },
                 list: [ 'v1.peachapi.com:443::::::::::::::::' ] } },
           socketPath: undefined,
           timeout: undefined,
           method: 'GET',
           path: '/activity/isUnread',
           _ended: true,
           res: [Circular],
           aborted: false,
           timeoutCb: null,
           upgradeOrConnect: false,
           parser: null,
           maxHeadersCount: null,
           [Symbol(isCorked)]: false,
           [Symbol(outHeadersKey)]:
            [Object: null prototype] {
              authorization: [ 'Authorization', 'Bearer undefined' ],
              host: [ 'host', 'v1.peachapi.com' ] } },
        ntick: true,
        response: [Circular],
        originalHost: 'v1.peachapi.com',
        originalHostHeaderName: 'host',
        responseContent: [Circular],
        _ended: true,
        _callbackCalled: true },
     toJSON: [Function: responseToJSON],
     caseless:
      Caseless {
        dict:
         { 'cache-control': 'no-cache="set-cookie"',
           'content-type': 'text/plain; charset=utf-8',
           date: 'Sat, 17 Nov 2018 02:18:17 GMT',
           server: 'nginx/1.12.1',
           'set-cookie':
            [ 'AWSELB=CB5D1FBB08457FD29E642B975FCD72050995BE8DFDBBC3E6C40C175F635E76DDC5F1D53B5B8ABD81DD6022F9D22EBE0CB1216A1844EFE85CE4BEE9B49B5F4E78AFB10F58F4;PATH=/' ],
           'content-length': '0',
           connection: 'Close' } },
     body: '' } }
